ul, ol, li {
    list-style: none;
    padding: 0;
    margin: 0;
}

//input
.input-group-prepend,
.input-group-append {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    width: 100%;
}

.input-group-prepend a:first-child,
.input-group-prepend button:first-child,
.input-group-prepend label:first-child,
.input-group-prepend img:first-child,
.input-group-append a:last-child,
.input-group-append button:last-child,
.input-group-append label:last-child,
.input-group-append img:last-child {
    color: #6c757d;
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    display: inline-block;
    font-weight: 400;
    line-height: 1.5;
    text-align: center;
    vertical-align: middle;
    user-select: none;
    background-color: transparent;
    border: 1px solid transparent;
    padding: 0.375rem 0.75rem;
    font-size: 0.9rem;
    border-radius: 0.15rem;
}

.input-group-prepend a:first-child,
.input-group-prepend button:first-child,
.input-group-prepend label:first-child,
.input-group-prepend img:first-child {
    left: 0;
    right: auto;
}

.input-group-prepend .form-control {
    padding-left: 2.35rem;
}

.input-group-append .form-control {
    padding-right: 2.35rem;
}

.input-group-prepend img:first-child,
.input-group-append img:last-child {
    padding: 0;
    top: 2px;
    cursor: pointer;
}

.input-group-prepend img:first-child {
    left: 2px;
}

.input-group-append img:last-child {
    right: 2px;
}

//checkbox and radio
@each $color, $value in $theme-colors {
    @if $color != 'light' {
        .form-checkbox-#{$color} .form-check-input:checked, .form-radio-#{$color} .form-check-input:checked {
            background-color: $value;
            border-color: $value;
        }
    }
}

//switch
input[data-switch] {
    display: none;
}

input[data-switch] + label {
    width: 56px;
    height: 24px;
    background-color: #f1f3fa;
    background-image: none;
    border-radius: 2rem;
    cursor: pointer;
    display: inline-block;
    text-align: center;
    position: relative;
    -webkit-transition: all .1s ease-in-out;
    transition: all .1s ease-in-out;
}

input[data-switch] + label:before {
    color: #313a46;
    content: attr(data-off-label);
    display: block;
    font-family: inherit;
    font-weight: 500;
    font-size: .75rem;
    line-height: 24px;
    position: absolute;
    right: 3px;
    margin: 0 .21667rem;
    top: 0;
    text-align: center;
    min-width: 1.66667rem;
    overflow: hidden;
    -webkit-transition: all .1s ease-in-out;
    transition: all .1s ease-in-out;
}

input[data-switch] + label:after {
    content: '';
    position: absolute;
    left: 4px;
    background-color: #adb5bd;
    -webkit-box-shadow: none;
    box-shadow: none;
    border-radius: 2rem;
    height: 18px;
    width: 18px;
    top: 3px;
    -webkit-transition: all .1s ease-in-out;
    transition: all .1s ease-in-out;
}

input[data-switch]:checked + label:before {
    color: $white;
    content: attr(data-on-label);
    right: auto;
    left: 4px;
}

input[data-switch]:checked + label:after {
    left: 34px;
    background-color: #f1f3fa;
}

input[data-switch]:checked + label {
    background-color: $primary;
}

@each $color, $value in $theme-colors {
    input[data-switch=#{$color}]:checked + label {
        background-color: $value;
    }
}

input[data-switch=bool] + label:before,
input[data-switch=bool]:checked + label:before {
    color: $white !important;
}

input[data-switch=bool] + label:after {
    background-color: $gray-100;
}

input[data-switch=bool] + label {
    background-color: $danger;
}

input:disabled + label {
    opacity: .5;
    cursor: default;
}

//dropdown
.dropdown-indicator {
    position: relative;

    &:after {
        content: "";
        display: block;
        position: absolute;
        right: 5px;
        height: 0.4rem;
        width: 0.4rem;
        border-right: 1px solid $gray-700;
        border-bottom: 1px solid $gray-700;
        top: 50%;
        transform: translateY(-50%) rotate(45deg);
        transition: $transition-base;
        transform-origin: center;
        transition-property: transform, border-color;
        border-color: currentColor;
    }

    &[aria-expanded="true"]:after {
        transform: translateY(-50%) rotate(225deg);
    }
}

//btn
@each $color, $value in $theme-colors {
    @if $color != 'light' {
        .btn-#{$color}, .btn-#{$color}:hover, .btn-#{$color}:focus {
            color: $white;
        }
    }
}

.btn-white {
    color: $secondary;
    border-color: $gray-300;

    &:hover, &:focus {
        background-color: $gray-100;
        border-color: $gray-400;
    }
}

.btn-white.active {
    @extend .btn-primary;
}

@each $color, $value in $theme-colors {
    @if $color != 'light' {
        .btn-outline-#{$color}:hover, .btn-outline-#{$color}:focus {
            color: $white;
        }
    }
}

.btn-outline-white {
    color: $gray-300;
    border-color: $gray-300;

    &:hover, &:focus {
        background-color: $gray-400;
        border-color: $gray-400;
    }
}

//breadcrumb
.breadcrumb-item + .breadcrumb-item::before {
    font-family: bootstrap-icons !important;
    content: '\f285';
    color: currentColor;
}
