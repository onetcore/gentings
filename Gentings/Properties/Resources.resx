<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentIsEmpty" xml:space="preserve">
    <value>参数'{0}'不能为空。</value>
  </data>
  <data name="ArgumentPropertyNull" xml:space="preserve">
    <value>参数'{1}'的'{0}'属性不能为空。</value>
  </data>
  <data name="CollectionArgumentIsEmpty" xml:space="preserve">
    <value>参数'{0}'集合最少需要包含一个值。</value>
  </data>
  <data name="DataAction_Created" xml:space="preserve">
    <value>恭喜你，你已经成功添加了“{0}”。</value>
  </data>
  <data name="DataAction_CreatedFailured" xml:space="preserve">
    <value>很抱歉，添加“{0}”失败了。</value>
  </data>
  <data name="DataAction_Deleted" xml:space="preserve">
    <value>恭喜你，你已经成功删除了所选择的{0}。</value>
  </data>
  <data name="DataAction_DeletedFailured" xml:space="preserve">
    <value>很抱歉，删除“{0}”失败了。</value>
  </data>
  <data name="DataAction_DeletedFailuredItemsNotEmpty" xml:space="preserve">
    <value>很抱歉，删除“{0}”失败了，因为包含的子项不为空。</value>
  </data>
  <data name="DataAction_Duplicate" xml:space="preserve">
    <value>很抱歉，“{0}”已经存在，操作失败。</value>
  </data>
  <data name="DataAction_Success" xml:space="preserve">
    <value>恭喜你，你已经成功完成了“{0}”。</value>
  </data>
  <data name="DataAction_UnknownError" xml:space="preserve">
    <value>很抱歉，发生了未知错误，操作失败，请重试。</value>
  </data>
  <data name="DataAction_Updated" xml:space="preserve">
    <value>恭喜你，你已经成功更新了“{0}”。</value>
  </data>
  <data name="DataAction_UpdatedFailured" xml:space="preserve">
    <value>很抱歉，更新“{0}”失败了。</value>
  </data>
  <data name="DataMigration_Completed" xml:space="preserve">
    <value>数据库迁移完成。</value>
  </data>
  <data name="DataMigration_Error" xml:space="preserve">
    <value>数据库迁移错误（请查看日志文件）：</value>
  </data>
  <data name="DataMigration_Failured" xml:space="preserve">
    <value>数据库迁移失败。</value>
  </data>
  <data name="DataMigration_Start" xml:space="preserve">
    <value>开始数据库迁移。</value>
  </data>
  <data name="DataResult_Created" xml:space="preserve">
    <value>添加了</value>
  </data>
  <data name="DataResult_Deleted" xml:space="preserve">
    <value>删除了</value>
  </data>
  <data name="DataResult_Updated" xml:space="preserve">
    <value>更新了</value>
  </data>
  <data name="DifferAction_Add" xml:space="preserve">
    <value>新增了</value>
  </data>
  <data name="DifferAction_AddFormat" xml:space="preserve">
    <value>”{0}“(”{1}“)</value>
  </data>
  <data name="DifferAction_Modify" xml:space="preserve">
    <value>修改了</value>
  </data>
  <data name="DifferAction_ModifyFormat" xml:space="preserve">
    <value>“{0}”由”{1}“修改为“{2}”</value>
  </data>
  <data name="DifferAction_Remove" xml:space="preserve">
    <value>移除了</value>
  </data>
  <data name="DifferAction_RemoveFormat" xml:space="preserve">
    <value>”{0}“(”{1}“)</value>
  </data>
  <data name="Differ_Duplicated_Differed" xml:space="preserve">
    <value>你已经对比过一次新对象，不能重复对比变更对象！</value>
  </data>
  <data name="Differ_Duplicated_Initialized" xml:space="preserve">
    <value>原有对象已经初始化，不能重复调用初始化方法！</value>
  </data>
  <data name="Differ_Uninitialized" xml:space="preserve">
    <value>对象变更原始对象未初始化，请在修改对象时候先调用Init方法。</value>
  </data>
  <data name="EmailStatus_Completed" xml:space="preserve">
    <value>成功发送</value>
  </data>
  <data name="EmailStatus_Failured" xml:space="preserve">
    <value>发送失败</value>
  </data>
  <data name="EmailStatus_Pending" xml:space="preserve">
    <value>等待发送</value>
  </data>
  <data name="EmailTaskService" xml:space="preserve">
    <value>电子邮件发送服务</value>
  </data>
  <data name="EmailTaskService_Description" xml:space="preserve">
    <value>发送队列在数据库中的电子邮件</value>
  </data>
  <data name="ErrorCode_InvalidParameters" xml:space="preserve">
    <value>参数错误：{0}。</value>
  </data>
  <data name="ErrorCode_UnknownError" xml:space="preserve">
    <value>发生未知错误</value>
  </data>
  <data name="ErrorCode_ValidError" xml:space="preserve">
    <value>验证失败</value>
  </data>
  <data name="EventMessage_NullMessage" xml:space="preserve">
    <value>事件消息未设置！</value>
  </data>
  <data name="EventMessage_NullUserId" xml:space="preserve">
    <value>事件消息的用户Id未设置，并且当前用户还未登录！</value>
  </data>
  <data name="EventType_Core" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="Interval_Day" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="Interval_Each_Day" xml:space="preserve">
    <value>每天</value>
  </data>
  <data name="Interval_Each_Month" xml:space="preserve">
    <value>每月</value>
  </data>
  <data name="Interval_Each_Year" xml:space="preserve">
    <value>每年</value>
  </data>
  <data name="Interval_Format_Error" xml:space="preserve">
    <value>格式错误，必须为MM-dd HH:mm格式。</value>
  </data>
  <data name="Interval_Month" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="Interval_Second" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="Interval_Seconds" xml:space="preserve">
    <value>每隔</value>
  </data>
  <data name="Interval_Year" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="MigrationError" xml:space="preserve">
    <value>数据迁移出错：{0}。</value>
  </data>
  <data name="MigrationStatus_Completed" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="MigrationStatus_Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="MigrationStatus_Normal" xml:space="preserve">
    <value>迁移中</value>
  </data>
  <data name="NoGetter" xml:space="preserve">
    <value>类型“{1}”的属性“{0}”必须包含get访问器。</value>
  </data>
  <data name="NoSetter" xml:space="preserve">
    <value>类型“{1}”的属性“{0}”必须包含set访问器。</value>
  </data>
  <data name="NotificationTaskService" xml:space="preserve">
    <value>系统通知清理服务</value>
  </data>
  <data name="NotificationTaskService_Description" xml:space="preserve">
    <value>清理每个用户得系统通知，删除多余得系统通知</value>
  </data>
  <data name="PrimaryKeyIsNotSingleField" xml:space="preserve">
    <value>实体“{0}”的主键{1}包含的不值一个属性！</value>
  </data>
  <data name="RowVersionOnlyOnePropertyEachClass" xml:space="preserve">
    <value>每个类只能包含一个版本“TimestampAttribute”特性属性。</value>
  </data>
  <data name="SaveSettings" xml:space="preserve">
    <value>保存了“{0}”配置信息</value>
  </data>
  <data name="SaveSettingsFailured" xml:space="preserve">
    <value>保存配置失败</value>
  </data>
  <data name="TaskExecuteError" xml:space="preserve">
    <value>[服务]{0}执行错误：{1}。</value>
  </data>
  <data name="TypeMustBeBytes" xml:space="preserve">
    <value>“TimestampAttribute”特性属性的数据类型必须为byte[]。</value>
  </data>
  <data name="UnknownOperation" xml:space="preserve">
    <value>在“{1}”找不到“{0}”的操作符。</value>
  </data>
  <data name="UnsupportedType" xml:space="preserve">
    <value>数据类型'{0}'暂时还不支持。</value>
  </data>
</root>